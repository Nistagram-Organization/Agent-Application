name: Build backend and frontend applications
on: 
  pull_request:
    branches:
        - main
        - development
    types: [opened, synchronize]

jobs:
  # Create version
  create-version:
    name: Semantic version
    runs-on: ubuntu-latest
    steps:
      - uses: paulhatch/semantic-version@v4.0.2
        with:
          tag_prefix: ""
          major_pattern: "(MAJOR)"
          minor_pattern: "(MINOR)"
          format: "${major}.${minor}.${patch}"
          short_tags: false
          bump_each_commit: true

  # Build backend application
  build-backend:
    strategy:
      matrix:
        go-version: [1.15.x]
        os: [ubuntu-latest, macos-latest, windows-latest]
    runs-on: ${{ matrix.os }}
    steps:
    - name: Install Go
      uses: actions/setup-go@v2
      with:
        go-version: ${{ matrix.go-version }}
    - name: Checkout code
      uses: actions/checkout@v2
      with:
        fetch-depth: 0
    - name: Build exe
      working-directory: ./Backend
      run: go build -o ./Agent-Application.exe ./src/main.go
    - name: Publish backend application artifact
      uses: actions/upload-artifact@v2
      with:
        name: Backend-application-${{ version }}
        path: ./Backend/Agent-Application.exe
      if: ${{ matrix.os == 'ubuntu-latest' }}
  
  # Build frontend application on mac and ubuntu
  build-frontend-mac-ubuntu:
    strategy:
      matrix:
        node-version: [12.x]
        os: [ubuntu-latest, macos-latest]
    runs-on: ${{ matrix.os }}
    steps:
    - uses: actions/checkout@v2
      with:
        fetch-depth: 0
    - name: Use Node.js ${{ matrix.node-version }}
      uses: actions/setup-node@v1
      with:
        node-version: ${{ matrix.node-version }}
    - name: Clean install
      working-directory: ./Frontend
      run: npm ci
    - name: Build React app
      working-directory: ./Frontend
      run: CI=false npm run build --if-present
    - name: Publish frontend application artifact
      uses: actions/upload-artifact@v2
      with: 
        name: Frontend-application-${{ version }}
        path: ./Frontend/build
      if: ${{ matrix.os == 'ubuntu-latest' }}

  # Build frontend application on windows
  build-frontend-windows:
    strategy:
      matrix:
        node-version: [12.x]
        os: [windows-latest]
    runs-on: ${{ matrix.os }}
    steps:
    - uses: actions/checkout@v2
      with:
        fetch-depth: 0
    - name: Use Node.js ${{ matrix.node-version }}
      uses: actions/setup-node@v1
      with:
        node-version: ${{ matrix.node-version }}
    - name: Clean install
      working-directory: ./Frontend
      run: npm ci
    - name: Build React app
      working-directory: ./Frontend
      run: set CI=false && npm run build --if-present
