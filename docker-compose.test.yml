version: '3.7'

services:
  agent_products_db:
    container_name: agent_products_db
    image: postgres:latest
    restart: always
    ports:
      - 5432
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -d agentapplicationschema"]
      interval: 10s
      timeout: 5s
      retries: 5
    environment:
      - POSTGRES_USER=root
      - POSTGRES_PASSWORD=root
      - POSTGRES_DB=agentapplicationschema

  agent_reports_db:
    container_name: agent_reports_db
    image: postgres:latest
    restart: always
    ports:
      - 5432
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -d agentapplicationschema"]
      interval: 10s
      timeout: 5s
      retries: 5
    environment:
      - POSTGRES_USER=root
      - POSTGRES_PASSWORD=root
      - POSTGRES_DB=agentapplicationschema
    volumes:
        - database-data-reports:/var/lib/postgresql/data

  agent_invoices_db:
    container_name: agent_invoices_db
    image: postgres:latest
    restart: always
    ports:
      - 5432
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -d agentapplicationschema"]
      interval: 10s
      timeout: 5s
      retries: 5
    environment:
      - POSTGRES_USER=root
      - POSTGRES_PASSWORD=root
      - POSTGRES_DB=agentapplicationschema
    volumes:
        - database-data-invoices:/var/lib/postgresql/data
    
  agent-products:
    container_name: agent-products
    image: agent-products:test
    build:
      dockerfile: Dockerfile.test
      context: ./agent-products
    depends_on:
      agent_products_db:
          condition: service_healthy
    environment:
      DATABASE_URL: "host=agent_products_db user=root password=root dbname=agentapplicationschema port=5432"
      HEROKU: "false"

  agent-reports:
    container_name: agent-reports
    image: agent-reports:test
    build:
      dockerfile: Dockerfile.test
      context: ./agent-reports
    depends_on:
      agent_reports_db:
          condition: service_healthy
    environment:
      DATABASE_URL: "host=agent_reports_db user=root password=root dbname=agentapplicationschema port=5432"
      HEROKU: "false"

  agent-invoices:
    container_name: agent-invoices
    image: agent-invoices:test
    build:
      dockerfile: Dockerfile.test
      context: ./agent-invoices
    depends_on:
      agent_invoices_db:
          condition: service_healthy
    environment:
      DATABASE_URL: "host=agent_invoices_db user=root password=root dbname=agentapplicationschema port=5432"
      HEROKU: "false"
  