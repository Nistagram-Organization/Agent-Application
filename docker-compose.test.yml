version: '3.7'

services:
  agent-products-db:
    container_name: agent-products-db
    image: postgres:latest
    restart: always
    ports:
      - 5432
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -d agentapplicationschema"]
      interval: 10s
      timeout: 5s
      retries: 5
    environment:
      - POSTGRES_USER=root
      - POSTGRES_PASSWORD=root
      - POSTGRES_DB=agentapplicationschema
    volumes:
        - database-data:/var/lib/postgresql/data

  agent-reports-db:
    container_name: agent-reports-db
    image: postgres:latest
    restart: always
    ports:
      - 5432
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -d agentapplicationschema"]
      interval: 10s
      timeout: 5s
      retries: 5
    environment:
      - POSTGRES_USER=root
      - POSTGRES_PASSWORD=root
      - POSTGRES_DB=agentapplicationschema
    volumes:
        - database-data:/var/lib/postgresql/data

  agent-invoices-db:
    container_name: agent-invoices-db
    image: postgres:latest
    restart: always
    ports:
      - 5432
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -d agentapplicationschema"]
      interval: 10s
      timeout: 5s
      retries: 5
    environment:
      - POSTGRES_USER=root
      - POSTGRES_PASSWORD=root
      - POSTGRES_DB=agentapplicationschema
    volumes:
        - database-data:/var/lib/postgresql/data
    
  agent-products:
    container_name: agent-products
    image: agent-products:test
    build:
      dockerfile: Dockerfile.test
      context: ./agent-products
    depends_on:
      agent-products-db:
          condition: service_healthy
    environment:
      DATABASE_URL: "host=agent-products-db user=root password=root dbname=agentapplicationschema port=5432"

  agent-reports:
    container_name: agent-reports
    image: agent-reports:test
    build:
      dockerfile: Dockerfile.test
      context: ./agent-reports
    depends_on:
      agent-reports-db:
          condition: service_healthy
    environment:
      DATABASE_URL: "host=agent-reports-db user=root password=root dbname=agentapplicationschema port=5432"

  agent-invoices:
    container_name: agent-invoices
    image: agent-invoices:test
    build:
      dockerfile: Dockerfile.test
      context: ./agent-invoices
    depends_on:
      agent-invoices-db:
          condition: service_healthy
    environment:
      DATABASE_URL: "host=agent-invoices-db user=root password=root dbname=agentapplicationschema port=5432"
  