version: '3.7'

volumes:
  database-data:
    name: server-database

services:
  postgres_database:
    container_name: postgres_database
    image: postgres:latest
    restart: always
    ports:
      - 5432
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -d agentapplicationschema"]
      interval: 10s
      timeout: 5s
      retries: 5
    environment:
      - POSTGRES_USER=root
      - POSTGRES_PASSWORD=root
      - POSTGRES_DB=agentapplicationschema
    volumes:
        - database-data:/var/lib/postgresql/data

  agent-products:
    container_name: agent-products
    build:
      context: ./agent-products
    ports:
      - 8081
    depends_on:
      postgres_database:
        condition: service_healthy
    restart: on-failure
    environment:
      DATABASE_URL: "host=postgres_database user=root password=root dbname=agentapplicationschema port=5432"

  agent-reports:
   container_name: agent-reports
   build:
     context: ./agent-reports
   ports:
     - 8082
   depends_on:
      postgres_database:
        condition: service_healthy
   restart: on-failure
   environment:
      DATABASE_URL: "host=postgres_database user=root password=root dbname=agentapplicationschema port=5432"

  agent-invoices:
    container_name: agent-invoices
    build:
      context: ./agent-invoices
    ports:
      - 8083
    depends_on:
      postgres_database:
        condition: service_healthy
    restart: on-failure
    environment:
      DATABASE_URL: "host=postgres_database user=root password=root dbname=agentapplicationschema port=5432"

  nginx:
    image: nginx:latest
    container_name: nginx
    volumes:
      - ./nginx/nginx.conf:/etc/nginx/nginx.conf:ro
    ports:
      - 8080:8080
    depends_on:
      - agent-products
      - agent-invoices
      - agent-reports

  frontend:
    container_name: frontend
    build:
      context: ./Frontend
    ports:
      - 3000:3000